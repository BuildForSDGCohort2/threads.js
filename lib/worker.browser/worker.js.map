{"version":3,"sources":["worker.browser/worker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;6BAAyB,eAAe;;;;yBAClB,cAAc;;;;sBAEV,WAAW;;AAGrC,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE;AAC5E,QAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;CAC1D;;AAED,IAAM,gBAAgB,GAAG,qCAAqC,GAAG,SAAS,wBAAW,CAAC;;AAGtF,SAAS,gBAAgB,CAAC,SAAS,EAAE;AACnC,MAAM,MAAM,GAAG,wBAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;AACxC,SAAO,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,CAAC;CACtD;;IAGoB,MAAM;YAAN,MAAM;;AACd,WADQ,MAAM,GAC6B;QAA1C,aAAa,yDAAG,IAAI;QAAE,aAAa,yDAAG,EAAE;;0BADjC,MAAM;;AAEvB,+BAFiB,MAAM,6CAEf;;AAER,QAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAC3C,QAAI,CAAC,cAAc,EAAE,CAAC;;AAEtB,QAAI,aAAa,EAAE;AACjB,UAAI,CAAC,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KACxC;GACF;;eAVkB,MAAM;;WAYtB,aAAC,KAAK,EAAsB;UAApB,aAAa,yDAAG,EAAE;;AAC3B,UAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AAC/B,YAAI,CAAC,SAAS,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;OACtC,MAAM;AACL,YAAI,CAAC,UAAU,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;OACvC;AACD,aAAO,IAAI,CAAC;KACb;;;WAEQ,mBAAC,MAAM,EAAE,aAAa,EAAE;AAC/B,UAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AACtB,oBAAY,EAAG,IAAI;AACnB,eAAO,EAAQ,aAAa;OAC7B,CAAC,CAAC;KACJ;;;WAES,oBAAC,MAAM,EAAE,aAAa,EAAE;AAChC,UAAI,CAAC,MAAM,EAAE;AAAE,cAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;OAAE;;;AAGnF,UAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AACtB,qBAAa,EAAG,IAAI;AACpB,eAAO,EAAS,aAAa,CAAC,MAAM,CAAC,CAAE,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC;OACvE,CAAC,CAAC;KACJ;;;WAEG,cAAC,KAAK,EAAsB;UAApB,aAAa,yDAAG,EAAE;;AAC5B,UAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AACtB,aAAK,EAAG,IAAI;AACZ,aAAK,EAAL,KAAK;OACN,EAAE,aAAa,CAAC,CAAC;AAClB,aAAO,IAAI,CAAC;KACb;;;WAEG,gBAAG;AACL,UAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,aAAO,IAAI,CAAC;KACb;;;WAEa,0BAAG;AACf,UAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AACzE,UAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;KACtE;;;SAvDkB,MAAM;;;qBAAN,MAAM","file":"worker.browser/worker.js","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport slaveCode from './slave-code';\n\nimport { getConfig } from '../config';\n\n\nif (typeof window.Worker !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nconst slaveCodeDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(slaveCode);\n\n\nfunction prependScriptUrl(scriptUrl) {\n  const prefix = getConfig().basepath.web;\n  return prefix ? prefix + '/' + scriptUrl : scriptUrl;\n}\n\n\nexport default class Worker extends EventEmitter {\n  constructor(initialScript = null, importScripts = []) {\n    super();\n\n    this.worker = new Worker(slaveCodeDataUri);\n    this.setupListeners();\n\n    if (initialScript) {\n      this.run(initialScript, importScripts);\n    }\n  }\n\n  run(toRun, importScripts = []) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n    return this;\n  }\n\n  runMethod(method, importScripts) {\n    this.worker.postMessage({\n      initByMethod : true,\n      scripts      : importScripts\n    });\n  }\n\n  runScripts(script, importScripts) {\n    if (!script) { throw new Error('Must pass a function or a script URL to run().'); }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts : true,\n      scripts       : importScripts.concat([ script ]).map(prependScriptUrl)\n    });\n  }\n\n  send(param, transferables = []) {\n    this.worker.postMessage({\n      doRun : true,\n      param\n    }, transferables);\n    return this;\n  }\n\n  kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  }\n\n  setupListeners() {\n    this.worker.addEventListener('message', this.emit.bind(this, 'message'));\n    this.worker.addEventListener('error', this.emit.bind(this, 'error'));\n  }\n}\n"],"sourceRoot":"/source/"}